#BlueJ class context
comment0.target=DynamicViewModelGameObject
comment0.text=\r\n\ Ein\ dreidimensionales\ dynamisch\ bewegbares\ Objekt\ in\ der\ Spielwelt,\ das\ als\ ViewModel\ f\u00FCr\ die\ Kamera\ gerendert\ wird,\ also\ nicht\ mit\ der\ ViewMatrix\ verschoben\ wird\r\n\ \r\n\ @author\ Lasse\ Huber-Saffer\r\n\ @version\ 01.01.2022\r\n
comment1.params=mesh\ color\ position\ rotation\ scale
comment1.target=DynamicViewModelGameObject(Mesh,\ TurtleColor,\ maths.Vector3,\ maths.Vector3,\ maths.Vector3)
comment1.text=\r\n\ Konstruktor\ f\u00FCr\ DynamicViewModelGameObject\ mit\ gegebenem\ Mesh\ (3D-Modell),\ Position,\ Rotation\ und\ Skalierung\r\n\ @param\ mesh\ Mesh\ (3D-Modell)\r\n\ @param\ color\ Farbe\ des\ Meshs\r\n\ @param\ position\ Position\r\n\ @param\ rotation\ Rotation\r\n\ @param\ scale\ Skalierung\r\n
comment10.params=
comment10.target=physics.ICollider\ getCollider()
comment10.text=\r\n\ @see\ IGameObject\#getCollider()\r\n
comment11.params=
comment11.target=maths.Vector3\ getPosition()
comment11.text=\r\n\ @see\ IGameObject\#getPosition()\r\n
comment12.params=
comment12.target=maths.Vector3\ getRotation()
comment12.text=\r\n\ @see\ IGameObject\#getRotation()\r\n
comment13.params=
comment13.target=maths.Vector3\ getScale()
comment13.text=\r\n\ @see\ IGameObject\#getScale()\r\n
comment14.params=
comment14.target=TurtleColor\ getColor()
comment14.text=\r\n\ @see\ IGameObject\#getColor()\r\n
comment15.params=color
comment15.target=void\ setColor(TurtleColor)
comment15.text=\r\n\ @see\ IGameObject\#setColor()\r\n
comment16.params=mesh
comment16.target=void\ setMesh(Mesh)
comment16.text=\r\n\ Setzt\ das\ Mesh\ (3D-Modell)\r\n\ @param\ mesh\ Mesh\ (3D-Modell)\r\n
comment17.params=position
comment17.target=void\ setPosition(maths.Vector3)
comment17.text=\r\n\ @see\ IDynamicGameObject\#setPosition()\r\n
comment18.params=rotation
comment18.target=void\ setRotation(maths.Vector3)
comment18.text=\r\n\ @see\ IDynamicGameObject\#setRotation()\r\n
comment19.params=scale
comment19.target=void\ setScale(maths.Vector3)
comment19.text=\r\n\ @see\ IDynamicGameObject\#setScale()\r\n
comment2.params=deltaTime\ runTime\ cameraPosition
comment2.target=void\ update(double,\ double,\ maths.Vector3)
comment2.text=\r\n\ @see\ IGameObject\#update()\r\n
comment3.params=renderer\ camera
comment3.target=void\ draw(Renderer,\ Camera)
comment3.text=\r\n\ @see\ IGameObject\#draw()\r\n
comment4.params=delta
comment4.target=void\ move(maths.Vector3)
comment4.text=\r\n\ @see\ IDynamicGameObject\#move()\r\n
comment5.params=rotation
comment5.target=void\ rotate(maths.Vector3)
comment5.text=\r\n\ @see\ IDynamicGameObject\#rotate()\r\n
comment6.params=scale
comment6.target=void\ scale(maths.Vector3)
comment6.text=\r\n\ @see\ IDynamicGameObject\#scale()\r\n
comment7.params=
comment7.target=maths.Matrix4\ getModelMatrix()
comment7.text=\r\n\ Generiert\ die\ Modelmatrix\ aller\ Transformationen\ auf\ dem\ DynamicViewModelGameObject\r\n\ @return\ Modelmatrix\r\n
comment8.params=
comment8.target=Mesh\ getMesh()
comment8.text=\r\n\ Gibt\ eine\ Kopie\ des\ Meshs\ (3D-Modell)\ zur\u00FCck\r\n\ @return\ Mesh\ (3D-Modell)\r\n
comment9.params=
comment9.target=Mesh\ getMeshRef()
comment9.text=\r\n\ Gibt\ eine\ Referenz\ auf\ das\ Mesh\ (3D-Modell)\ zur\u00FCck\r\n\ @return\ Mesh\ (3D-Modell)\r\n
numComments=20
