#BlueJ class context
comment0.target=MatrixGenerator
comment0.text=\r\n\ Generiert\ verschiedene\ Transformationsmatrizen\ f\u00FCr\ dreidimensionale\ Geometrie\r\n\ \r\n\ @author\ Lasse\ Huber-Saffer\ \r\n\ @version\ 01.12.2021\r\n
comment1.params=
comment1.target=MatrixGenerator()
comment1.text=\r\n\ Konstruktor\ f\u00FCr\ Objekte\ der\ Klasse\ MatrixGenerator\r\n
comment10.params=vertex
comment10.target=Vector4\ viewportTransform(Vector4)
comment10.text=\r\n\ Transformiert\ einen\ Vertex\ in\ Clip-Koordinaten\ in\ das\ Screenspace\ der\ TurtleWelt\r\n\ @param\ vertex\ Vertex,\ der\ transformiert\ wird\r\n\ @return\ Vertex\ im\ Screenspace\r\n
comment2.params=v\ delta
comment2.target=Matrix4\ translate(Matrix4,\ Vector3)
comment2.text=\r\n\ Wendet\ eine\ Translation\ auf\ einer\ gegebenen\ Matrix\ an\r\n\ @param\ v\ Matrix,\ auf\ der\ die\ Transformation\ angewandt\ wird\r\n\ @param\ delta\ Vektor,\ um\ den\ die\ Matrix\ verschoben\ wird\r\n\ @return\ Ergebnismatrix\ der\ Transformation\r\n
comment3.params=v\ scale
comment3.target=Matrix4\ scale(Matrix4,\ Vector3)
comment3.text=\r\n\ Wendet\ eine\ Skalierung\ auf\ einer\ gegebenen\ Matrix\ an\r\n\ @param\ v\ Matrix,\ auf\ der\ die\ Transformation\ angewandt\ wird\r\n\ @param\ scale\ Vektor,\ um\ den\ die\ Matrix\ skaliert\ wird\r\n\ @return\ Ergebnismatrix\ der\ Transformation\r\n
comment4.params=v\ axis\ theta
comment4.target=Matrix4\ rotateOnAxis(Matrix4,\ Vector3,\ double)
comment4.text=\r\n\ Wendet\ eine\ axiale\ Rotation\ auf\ einer\ gegebenen\ Matrix\ an\r\n\ @param\ v\ Matrix,\ auf\ der\ die\ Transformation\ angewandt\ wird\r\n\ @param\ axis\ Achse,\ um\ den\ die\ Matrix\ rotiert\ wird\r\n\ @param\ theta\ Winkel,\ um\ den\ die\ Matrix\ entlang\ der\ Achse\ rotiert\ wird\r\n\ @return\ Ergebnismatrix\ der\ Transformation\r\n
comment5.params=delta
comment5.target=Matrix4\ generateTranslationMatrix(Vector3)
comment5.text=\r\n\ Generiert\ eine\ Translationsmatrix\r\n\ @param\ delta\ Vektor\ der\ Translation\r\n\ @return\ Translationsmatrix\r\n
comment6.params=scale
comment6.target=Matrix4\ generateScaleMatrix(Vector3)
comment6.text=\r\n\ Generiert\ eine\ Skalierungsmatrix\r\n\ @param\ scale\ Vektor\ der\ Skalierung\r\n\ @return\ Skalierungsmatrix\r\n
comment7.params=axis\ theta
comment7.target=Matrix4\ generateAxialRotationMatrix(Vector3,\ double)
comment7.text=\r\n\ Generiert\ eine\ Axialrotationsmatrix\r\n\ @param\ axis\ Achse\ der\ Rotation\r\n\ @param\ theta\ Winkel\ der\ Rotation\r\n\ @return\ Axialrotationsmatrix\r\n
comment8.params=near\ far\ aspectRatio\ fov
comment8.target=Matrix4\ generatePerspectiveProjectionMatrix(double,\ double,\ double,\ double)
comment8.text=\r\n\ Generiert\ eine\ perspektivische\ Projektionsmatrix\r\n\ @param\ near\ Nahebene\ des\ Frustums\r\n\ @param\ far\ Fernebene\ des\ Frustums\r\n\ @param\ aspectRatio\ Seitenverh\u00E4ltnis\ der\ Kamera\r\n\ @param\ fov\ Eulerwinkel\ des\ vertikalen\ Sichtfelds\r\n\ @return\ perspektivische\ Projektionsmatrix\r\n
comment9.params=position\ cameraTarget\ cameraUp
comment9.target=Matrix4\ generateLookAtMatrix(Vector3,\ Vector3,\ Vector3)
numComments=11
