#BlueJ class context
comment0.target=Player
comment0.text=\r\n\ Die\ Player\ Klasse\ beschreibt\ den\ Zustand\ des\ Spielers.\r\n\ Der\ Spieler\ ist\ ein\ DynamicGameObject,\ das\ kein\ Rendering\ durchf\u00FChrt\ und\ die\ Rotation\ repurposed.\r\n\ \r\n\ @author\ Sven\ Schreiber,\ Lasse\ Huber-Saffer\r\n\ @version\ 03.01.2022\r\n
comment1.params=position\ rotation\ soundEngine
comment1.target=Player(Vector3,\ Vector3,\ SoundEngine)
comment1.text=\r\n\ Konstruktor\ f\u00FCr\ Player\ mit\ Position\ und\ Rotation\r\n\ @param\ position\ Position\r\n\ @param\ rotation\ Rotationswerte\ f\u00FCr\ die\ Kamera\ (pitch,\ yaw,\ *)\r\n\ @param\ soundEngine\ Sound\ Engine,\ in\ der\ die\ Spielersounds\ geladen\ sind\r\n
comment10.params=
comment10.target=Camera\ getCamera()
comment10.text=\r\n\ Gibt\ die\ Kamera\ des\ Spieler\ als\ Referenz\ zur\u00FCck\r\n\ @return\ Kamera\ des\ Spielers\r\n
comment11.params=
comment11.target=CircleCollider\ getCollider()
comment11.text=\r\n\ Gibt\ den\ CircleCollider\ des\ Spielers\ als\ Referenz\ zur\u00FCck\r\n\ @return\ CircleCollider\ des\ Spielers\r\n
comment12.params=
comment12.target=boolean\ hasFallen()
comment12.text=\r\n\ Gibt\ zur\u00FCck,\ ob\ der\ Spieler\ gestorben\ und\ hingefallen\ ist\r\n\ @return\ true,\ wenn\ Spieler\ tot\ ist\ und\ bereits\ zu\ Boden\ gefallen\ ist\r\n
comment13.params=
comment13.target=java.lang.String\ getCauseOfDeath()
comment13.text=\r\n\ Gibt\ die\ Todesursache\ des\ Spielers\ zur\u00FCck\r\n\ @return\ Todesursache\ des\ Spielers\ in\ Textform,\ null,\ wenn\ Spieler\ lebt\r\n
comment14.params=
comment14.target=boolean\ isAlive()
comment14.text=\r\n\ @see\ ILivingEntity\#isAlive()\r\n
comment15.params=
comment15.target=int\ getHealth()
comment15.text=\r\n\ @see\ ILivingEntity\#getHealth()\r\n
comment16.params=
comment16.target=int\ getMaxHealth()
comment16.text=\r\n\ @see\ ILivingEntity\#getMaxHealth()\r\n
comment17.params=
comment17.target=Mesh\ getMesh()
comment17.text=\r\n\ Gibt\ eine\ Kopie\ des\ Meshs\ (3D-Modell)\ zur\u00FCck\r\n\ @return\ Mesh\ (3D-Modell)\r\n
comment18.params=
comment18.target=Mesh\ getMeshRef()
comment18.text=\r\n\ Gibt\ eine\ Referenz\ auf\ das\ Mesh\ (3D-Modell)\ zur\u00FCck\r\n\ @return\ Mesh\ (3D-Modell)\r\n
comment19.params=
comment19.target=Vector3\ getPosition()
comment19.text=\r\n\ @see\ IGameObject\#getPosition()\r\n
comment2.params=deltaTime\ runTime\ cameraPosition
comment2.target=void\ update(double,\ double,\ Vector3)
comment2.text=\r\n\ @see\ IGameObject\#update()\r\n
comment20.params=
comment20.target=Vector3\ getRotation()
comment20.text=\r\n\ @see\ IGameObject\#getRotation()\r\n
comment21.params=
comment21.target=Vector3\ getScale()
comment21.text=\r\n\ @see\ IGameObject\#getScale()\r\n
comment22.params=
comment22.target=TurtleColor\ getColor()
comment22.text=\r\n\ @see\ IGameObject\#getColor()\r\n
comment23.params=amount
comment23.target=void\ setHealth(int)
comment23.text=\r\n\ @see\ ILivingEntity\#setHealth()\r\n
comment24.params=amount
comment24.target=void\ setMaxHealth(int)
comment24.text=\r\n\ @see\ ILivingEntity\#setMaxHealth()\r\n
comment25.params=amount\ source
comment25.target=void\ damage(int,\ java.lang.String)
comment25.text=\r\n\ @see\ ILivingEntity\#damage()\r\n
comment26.params=amount\ source
comment26.target=void\ heal(int,\ java.lang.String)
comment26.text=\r\n\ @see\ ILivingEntity\#heal()\r\n
comment27.params=color
comment27.target=void\ setColor(TurtleColor)
comment27.text=\r\n\ @see\ IGameObject\#setColor()\r\n
comment28.params=mesh
comment28.target=void\ setMesh(Mesh)
comment28.text=\r\n\ Setzt\ das\ Mesh\ (3D-Modell)\r\n\ @param\ mesh\ Mesh\ (3D-Modell)\r\n
comment29.params=position
comment29.target=void\ setPosition(Vector3)
comment29.text=\r\n\ @see\ IDynamicGameObject\#setPosition()\r\n
comment3.params=renderer\ camera
comment3.target=void\ draw(Renderer,\ Camera)
comment3.text=\r\n\ @see\ IGameObject\#draw()\r\n
comment30.params=rotation
comment30.target=void\ setRotation(Vector3)
comment30.text=\r\n\ {@inheritDoc},\ Rotation\ wird\ wie\ folgt\ interpretiert\:\ (pitch,\ yaw,\ *)\r\n
comment31.params=scale
comment31.target=void\ setScale(Vector3)
comment31.text=\r\n\ @see\ IDynamicGameObject\#setScale()\r\n
comment4.params=self\ other
comment4.target=void\ onCollision(ICollider,\ ICollider)
comment4.text=\r\n\ @see\ ICollisionListener\#onCollision()\r\n
comment5.params=self\ other
comment5.target=void\ onResolution(ICollider,\ ICollider)
comment5.text=\r\n\ @see\ ICollisionListener\#onResolution()\r\n
comment6.params=delta
comment6.target=void\ move(Vector3)
comment6.text=\r\n\ @see\ IDynamicGameObject\#move()\r\n
comment7.params=rotation
comment7.target=void\ rotate(Vector3)
comment7.text=\r\n\ {@inheritDoc},\ Rotation\ wird\ wie\ folgt\ interpretiert\:\ (pitch,\ yaw,\ *)\r\n
comment8.params=scale
comment8.target=void\ scale(Vector3)
comment8.text=\r\n\ @see\ IDynamicGameObject\#scale()\r\n
comment9.params=
comment9.target=Matrix4\ getModelMatrix()
comment9.text=\r\n\ Generiert\ die\ Modelmatrix\ aller\ Transformationen\ auf\ dem\ SimpleDynamicGameObject\r\n\ @return\ Modelmatrix\r\n
numComments=32
