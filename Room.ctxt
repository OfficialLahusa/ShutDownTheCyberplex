#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Ein\ r\u00E4umlich\ eingegrenzter\ Abschnitt\ einer\ Gridmap,\ innerhalb\ dessen\ Simulationen\ durchgef\u00FChrt\ werden\r\n\ \r\n\ @author\ Lasse\ Huber-Saffer\r\n\ @version\ 03.01.2022\r\n
comment1.params=map
comment1.target=Room(GridMap)
comment1.text=\r\n\ Konstruktor\ f\u00FCr\ Objekte\ der\ Klasse\ Room\r\n\ @param\ map\ GridMap,\ in\ der\ der\ Raum\ sich\ befindet\r\n
comment10.params=door
comment10.target=void\ addDoor(IDoorGameObject)
comment10.text=\r\n\ F\u00FCgt\ ein\ T\u00FCrobjekt\ zum\ Raum\ hinzu\r\n\ @param\ door\ T\u00FCrobjekt\r\n
comment11.params=x\ z
comment11.target=boolean\ contains(int,\ int)
comment11.text=\r\n\ Pr\u00FCft,\ ob\ ein\ Koordinatenpaar\ im\ Raum\ enthalten\ ist\r\n\ @param\ x\ x-Koordinate\r\n\ @param\ z\ z-Koordinate\r\n\ @return\ true,\ wenn\ Koordinatenpaar\ im\ Raum\ enthalten\ ist,\ sonst\ false\r\n
comment12.params=pos
comment12.target=void\ addTile(Vector2i)
comment12.text=\r\n\ F\u00FCgt\ eine\ bestimmte\ Tile\ zum\ Gebiet\ dieses\ Raumes\ hinzu\r\n\ @param\ pos\ Position\ der\ Tile\r\n
comment13.params=pos
comment13.target=boolean\ contains(Vector2i)
comment13.text=\r\n\ Pr\u00FCft,\ ob\ ein\ Koordinatenpaar\ im\ Raum\ enthalten\ ist\r\n\ @param\ pos\ Koordinatenpaar\r\n\ @return\ true,\ wenn\ Koordinatenpaar\ im\ Raum\ enthalten\ ist,\ sonst\ false\r\n
comment14.params=particleSystem
comment14.target=void\ addParticleSystem(IParticleSystem)
comment14.text=\r\n\ F\u00FCgt\ ein\ Partikelsystem\ zum\ Raum\ hinzu\r\n\ @param\ particleSystem\ Partikelsystem\r\n
comment15.params=
comment15.target=java.util.HashSet\ getTiles()
comment15.text=\r\n\ Gibt\ eine\ Kopie\ des\ Sets\ der\ im\ Raum\ enthaltenen\ Tiles\ zur\u00FCck\r\n\ @return\ Kopie\ des\ Sets\ der\ im\ Raum\ enthaltenen\ Tiles\r\n
comment16.params=filter
comment16.target=java.util.HashSet\ getFilteredTiles(ITileFilter)
comment16.text=\r\n\ Gibt\ eine\ gefilterte\ Kopie\ des\ Sets\ der\ im\ Raum\ enthaltenen\ Tiles\ zur\u00FCck\r\n\ @param\ Filter,\ der\ jedem\ Tile-Wert\ einen\ booleschen\ Wert\ zuordnet.\ Nur\ Tiles\ mit\ dem\ Ergebnis\ true\ werden\ zur\u00FCckgegeben.\r\n\ @return\ Kopie\ des\ Sets\ der\ im\ Raum\ enthaltenen\ Tiles\r\n
comment17.params=
comment17.target=GridMap\ getMap()
comment17.text=\r\n\ Gibt\ die\ Map,\ in\ der\ dieser\ Raum\ liegt,\ zur\u00FCck\r\n\ @return\ Referenz\ zur\ Map,\ in\ der\ dieser\ Raum\ liegt\r\n
comment18.params=
comment18.target=java.util.ArrayList\ getFocusPoints()
comment18.text=\r\n\ Gibt\ die\ Liste\ der\ im\ Raum\ registrierten\ Turret-Fokuspunkte\ zur\u00FCck\r\n\ @return\ Liste\ der\ Turret-Fokuspunkte\r\n
comment19.params=
comment19.target=Vector2i[]\ getPatrolRoute()
comment19.text=\r\n\ Gibt\ die\ Patrouillenroute\ des\ Raums\ zur\u00FCck.\r\n\ Nicht\ existierende\ Patrouillenpunkte\ sind\ mit\ null\ belegt.\r\n\ @return\ Array\ der\ L\u00E4nge\ 8,\ das\ die\ registrierten\ Patrouillenpunkte\ enth\u00E4lt.\ Null,\ wenn\ es\ keine\ Route\ gibt.\r\n
comment2.params=tileProviders\ colliderProviders\ entityMeshes\ particleMeshes\ soundEngine\ tileLayer\ functionLayer
comment2.target=void\ populate(java.util.HashMap,\ java.util.HashMap,\ java.util.HashMap,\ java.util.HashMap,\ SoundEngine,\ java.util.ArrayList,\ java.util.ArrayList)
comment2.text=\r\n\ Verarbeitet\ die\ Tile-Werte\ und\ erstellt\ die\ spielbare\ Map\r\n\ @param\ tileProviders\ Hashmap\ der\ TileProvider.\ Der\ Key\ entspricht\ der\ Tile-ID\r\n\ @param\ colliderProviders\ Hashmap\ der\ ColliderProvider.\ Der\ Key\ entspricht\ der\ Tile-ID\r\n\ @param\ entityMeshes\ Register,\ aus\ dem\ die\ Entity-Meshes\ bezogen\ werden\r\n\ @param\ particleMeshes\ Register,\ aus\ dem\ die\ Particle-Meshes\ bezogen\ werden\r\n\ @param\ soundEngine\ Sound\ Engine\r\n\ @param\ tileLayer\ rohe\ Geometrie-Mapdaten\r\n\ @param\ functionLayer\ rohe\ Funktions-Mapdaten\r\n
comment20.params=
comment20.target=int\ getPatrolRouteLength()
comment20.text=\r\n\ Gibt\ die\ Patrouillenroutenl\u00E4nge\ zur\u00FCck\r\n\ @return\ L\u00E4nge\ der\ Patrouillenroute\r\n
comment21.params=
comment21.target=java.util.ArrayList\ getDoors()
comment21.text=\r\n\ Gibt\ die\ T\u00FCrobjekte\ des\ Raums\ zur\u00FCck\r\n\ @return\ Liste\ der\ T\u00FCrobjekte\ des\ Raums\r\n
comment22.params=
comment22.target=java.util.ArrayList\ getStaticColliders()
comment22.text=\r\n\ Gibt\ die\ statischen\ Collider\ des\ Raums\ zur\u00FCck\r\n\ @return\ Liste\ der\ Collider\ des\ Raums\r\n
comment23.params=
comment23.target=java.util.ArrayList\ getEntityColliders()
comment23.text=\r\n\ Gibt\ die\ Collider\ der\ Entities\ im\ Raum\ zur\u00FCck.\r\n\ Nicht\ jede\ Entity\ hat\ einen\ Collider.\r\n\ @return\ Liste\ der\ Collider\ der\ dynamischen\ Entities\ im\ Raum\r\n
comment24.params=
comment24.target=java.util.ArrayList\ getEntities()
comment24.text=\r\n\ Gibt\ die\ Entities\ innerhalb\ des\ Raums\ zur\u00FCck\r\n\ @return\ Liste\ der\ Entities\ innerhalb\ des\ Raums\r\n
comment25.params=
comment25.target=int\ getMinX()
comment25.text=\r\n\ Gibt\ den\ unteren\ inklusiven\ x-Wert\ der\ Bounding\ Box\ des\ Raums\ zur\u00FCck\r\n\ @return\ unterer\ inklusiver\ x-Wert\ der\ Bounding\ Box\r\n
comment26.params=
comment26.target=int\ getMaxX()
comment26.text=\r\n\ Gibt\ den\ oberen\ inklusiven\ x-Wert\ der\ Bounding\ Box\ des\ Raums\ zur\u00FCck\r\n\ @return\ oberer\ inklusiver\ x-Wert\ der\ Bounding\ Box\r\n
comment27.params=
comment27.target=int\ getMinZ()
comment27.text=\r\n\ Gibt\ den\ unteren\ inklusiven\ z-Wert\ der\ Bounding\ Box\ des\ Raums\ zur\u00FCck\r\n\ @return\ unterer\ inklusiver\ z-Wert\ der\ Bounding\ Box\r\n
comment28.params=
comment28.target=int\ getMaxZ()
comment28.text=\r\n\ Gibt\ den\ oberen\ inklusiven\ z-Wert\ der\ Bounding\ Box\ des\ Raums\ zur\u00FCck\r\n\ @return\ oberer\ inklusiver\ z-Wert\ der\ Bounding\ Box\r\n
comment3.params=collider
comment3.target=void\ handleCollisions(ICollider)
comment3.text=\r\n\ Verarbeitet\ die\ Kollisionen\ eines\ Colliders\ mit\ den\ Collidern\ des\ Raums\r\n\ @param\ collider\ Collider,\ dessen\ Kollisionen\ verarbeitet\ werden\r\n
comment4.params=renderer\ camera
comment4.target=void\ draw(Renderer,\ Camera)
comment4.text=\r\n\ @see\ IGameObject\#draw()\r\n
comment5.params=deltaTime\ runTime\ cameraPosition
comment5.target=void\ update(double,\ double,\ Vector3)
comment5.text=\r\n\ Updated\ den\ Raum.\r\n\ @param\ deltaTime\ Deltazeit\ des\ Frames\ in\ Sekunden\r\n\ @param\ runTime\ Laufzeit\ des\ Programms\ in\ Sekunden\r\n\ @param\ cameraPosition\ Position\ der\ Kamera\ im\ World\ Space\r\n
comment6.params=cameraPosition
comment6.target=void\ updateLOD(Vector3)
comment6.text=\r\n\ Updated\ die\ Levels-of-Detail\ der\ Raumgeometrie\ im\ Verh\u00E4ltnis\ zu\ einem\ Bezugspunkt\r\n\ @param\ cameraPosition\ Position\ der\ Kamera,\ die\ als\ Bezugspunkt\ der\ LOD-Berechnung\ genutzt\ wird\r\n
comment7.params=cameraPosition
comment7.target=void\ reorderAroundCamera(Vector3)
comment7.text=\r\n\ Sortiert\ die\ GameObjects,\ die\ Teil\ der\ Raumgeometrie\ sind,\ neu,\ sodass\ sie\ mit\ aufsteigender\ Distanz\ zur\ Kamera\ sortiert\ sind.\r\n\ Dies\ sorgt\ daf\u00FCr,\ dass\ das\ Flackern,\ das\ durch\ das\ Fehlen\ des\ Back\ Buffers\ entsteht,\ m\u00F6glichst\ entfernt\ von\ der\ Kamera\ stattfindet\ und\ somit\ weniger\ bemerkbar\ ist.\r\n\ @param\ cameraPosition\ Position\ der\ Kamera,\ im\ Bezug\ zu\ der\ die\ GameObjects\ sortiert\ werden\ sollen\r\n
comment8.params=obj1\ obj2
comment8.target=int\ compare(IGameObject,\ IGameObject)
comment9.params=x\ z
comment9.target=void\ addTile(int,\ int)
comment9.text=\r\n\ F\u00FCgt\ eine\ bestimmte\ Tile\ zum\ Gebiet\ dieses\ Raumes\ hinzu\r\n\ @param\ x\ x-Koordinate\ der\ Tile\r\n\ @param\ z\ z-Koordinate\ der\ Tile\r\n
numComments=29
