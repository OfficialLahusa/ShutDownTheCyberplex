#BlueJ class context
comment0.target=Vector2i
comment0.text=\r\n\ Zweidimensionaler\ Vektor\ aus\ Integern\r\n\ \r\n\ @author\ Lasse\ Huber-Saffer\r\n\ @version\ 13.12.2021\r\n
comment1.params=
comment1.target=Vector2i()
comment1.text=\r\n\ Parameterloser\ Konstruktor\ zu\ einem\ Vektor2i(0,\ 0)\r\n
comment10.params=
comment10.target=double\ getLength()
comment10.text=\r\n\ Gibt\ die\ L\u00E4nge\ des\ Vektors\ zur\u00FCck\r\n\ @return\ L\u00E4nge\ des\ Vektors\r\n
comment11.params=v
comment11.target=Vector2i\ add(int)
comment11.text=\r\n\ Addiert\ einen\ Skalar\ zu\ dem\ Vektor\r\n\ @param\ v\ skalarer\ Wert,\ der\ addiert\ wird\r\n\ @return\ Vektor,\ der\ bei\ der\ Addition\ entsteht\r\n
comment12.params=v
comment12.target=Vector2i\ subtract(int)
comment12.text=\r\n\ Subtrahiert\ einen\ Skalar\ von\ dem\ Vektor\r\n\ @param\ v\ skalarer\ Wert,\ der\ subtrahiert\ wird\r\n\ @return\ Vektor,\ der\ bei\ der\ Subtraktion\ entsteht\r\n
comment13.params=v
comment13.target=Vector2i\ multiply(int)
comment13.text=\r\n\ Multipliziert\ den\ Vektor\ mit\ einem\ Skalar\r\n\ @param\ v\ skalarer\ Faktor\r\n\ @return\ Vektor,\ der\ bei\ der\ Multiplikation\ entsteht\r\n
comment14.params=v
comment14.target=Vector2i\ divide(int)
comment14.text=\r\n\ Dividiert\ den\ Vektor\ durch\ einen\ Skalar\r\n\ @param\ v\ skalarer\ Divisor\ (\!\=\ 0.0)\r\n\ @return\ Vektor,\ der\ bei\ der\ Division\ entsteht\r\n
comment15.params=
comment15.target=Vector2i\ invert()
comment15.text=\r\n\ Invertiert\ den\ Vektor\ /\ kehrt\ den\ Vektor\ um\r\n\ @return\ Inverses\ des\ Vektors\r\n
comment16.params=v
comment16.target=Vector2i\ add(Vector2i)
comment16.text=\r\n\ Addiert\ zwei\ Vektoren\r\n\ @param\ v\ zweiter\ Summand\ bei\ der\ Vektoraddition\r\n\ @return\ Summe\ der\ beiden\ Vektoren\r\n
comment17.params=v
comment17.target=Vector2i\ subtract(Vector2i)
comment17.text=\r\n\ Subtrahiert\ zwei\ Vektoren\r\n\ @param\ v\ Subtrahent\ bei\ der\ Vektorsubtraktion\r\n\ @return\ Differenz\ der\ beiden\ Vektoren\r\n
comment18.params=v
comment18.target=int\ dot(Vector2i)
comment18.text=\r\n\ Skalarprodukt/Punktprodukt\ zweier\ Vektoren\r\n\ @param\ v\ zweiter\ Vektor,\ mit\ dem\ das\ Skalarprodukt\ gebildet\ wird\r\n\ @return\ skalares\ Ergebnis\ des\ Produkts\r\n
comment19.params=v
comment19.target=boolean\ isOrtogonalTo(Vector2i)
comment19.text=\r\n\ Pr\u00FCft\ die\ Orthogonalit\u00E4t\ zweier\ Vektoren\ zueinander\r\n\ @param\ v\ Vektor,\ zu\ dem\ die\ Orthogonalit\u00E4t\ gepr\u00FCft\ werden\ soll\r\n\ @return\ Wahrheitswert\ der\ Aussage\ "dieser\ Vektor\ ist\ orthogonal\ zu\ v"\r\n
comment2.params=copy
comment2.target=Vector2i(Vector2i)
comment2.text=\r\n\ Kopie-Konstruktor\r\n\ @param\ copy\ zu\ kopierender\ Vektor\r\n
comment20.params=v
comment20.target=double\ getAngleBetween(Vector2i)
comment20.text=\r\n\ Gibt\ den\ Winkel\ zwischen\ zwei\ Vektoren\ zur\u00FCck\r\n\ @param\ v\ Vektor,\ zu\ dem\ der\ Winkel\ berechnet\ wird\r\n\ @return\ Winkel\ zwischen\ den\ beiden\ Vektoren\r\n
comment3.params=x\ y
comment3.target=Vector2i(int,\ int)
comment3.text=\r\n\ Konstruktor\ mit\ zwei\ Parametern\ f\u00FCr\ jeweilige\ Komponenten\r\n\ @param\ x\ x-Komponente\ des\ Vektors\r\n\ @param\ y\ y-Komponente\ des\ Vektors\r\n
comment4.params=o
comment4.target=boolean\ equals(java.lang.Object)
comment4.text=\r\n\ Pr\u00FCft\ diesen\ Vektor\ auf\ Gleichheit\ mit\ einem\ gegebenen\ Anderen\r\n\ @param\ o\ \r\n\ @return\ Gleichheit\ der\ Vektoren\r\n
comment5.params=
comment5.target=int\ hashCode()
comment6.params=
comment6.target=int\ getX()
comment6.text=\r\n\ Gibt\ die\ x-Komponente\ des\ Vektors\ zur\u00FCck\r\n\ @return\ x-Komponente\ des\ Vektors\r\n
comment7.params=
comment7.target=int\ getY()
comment7.text=\r\n\ Gibt\ die\ y-Komponente\ des\ Vektors\ zur\u00FCck\r\n\ @return\ y-Komponente\ des\ Vektors\r\n
comment8.params=x
comment8.target=void\ setX(int)
comment8.text=\r\n\ Setzt\ die\ x-Komponente\ des\ Vektors\ zu\ einem\ bestimmten\ Wert\r\n\ @param\ x\ Wert,\ zu\ dem\ die\ x-Komponente\ des\ Vektors\ gesetzt\ wird\r\n
comment9.params=y
comment9.target=void\ setY(int)
comment9.text=\r\n\ Setzt\ die\ y-Komponente\ des\ Vektors\ zu\ einem\ bestimmten\ Wert\r\n\ @param\ y\ Wert,\ zu\ dem\ die\ y-Komponente\ des\ Vektors\ gesetzt\ wird\r\n
numComments=21
